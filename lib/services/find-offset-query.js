"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findOffsetQuery = void 0;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _helpers = require("../helpers");

const findInRepository = repository => query => {
  var _query$fields, _query$fields$paginat;

  return (0, _rxjs.zip)(repository.find(query), (_query$fields = query.fields) !== null && _query$fields !== void 0 && (_query$fields$paginat = _query$fields.pagination) !== null && _query$fields$paginat !== void 0 && _query$fields$paginat.total ? repository.count(query) : (0, _rxjs.of)(0)).pipe((0, _operators.map)(([data, total]) => ({
    data,
    pagination: {
      total,
      rowsPerPage: query.rowsPerPage,
      pageIndex: query.pageIndex
    }
  })));
};

const findOffsetQuery = ({
  query,
  repository,
  querySchema,
  validatePermission
}) => (0, _rxjs.of)(query).pipe((0, _operators.map)(_helpers.sanitizeOffsetQuery), (0, _operators.switchMap)((0, _helpers.validateSchema)(querySchema)), (0, _operators.switchMap)(q => validatePermission ? validatePermission(q).pipe((0, _operators.map)(() => q)) : (0, _rxjs.of)(q)), (0, _operators.switchMap)(findInRepository(repository)));

exports.findOffsetQuery = findOffsetQuery;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXJ2aWNlcy9maW5kLW9mZnNldC1xdWVyeS50cyJdLCJuYW1lcyI6WyJmaW5kSW5SZXBvc2l0b3J5IiwicmVwb3NpdG9yeSIsInF1ZXJ5IiwiZmluZCIsImZpZWxkcyIsInBhZ2luYXRpb24iLCJ0b3RhbCIsImNvdW50IiwicGlwZSIsImRhdGEiLCJyb3dzUGVyUGFnZSIsInBhZ2VJbmRleCIsImZpbmRPZmZzZXRRdWVyeSIsInF1ZXJ5U2NoZW1hIiwidmFsaWRhdGVQZXJtaXNzaW9uIiwic2FuaXRpemVPZmZzZXRRdWVyeSIsInEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFJQTs7QUFDQTs7QUFDQTs7QUFFQSxNQUFNQSxnQkFBZ0IsR0FDcEJDLFVBRHVCLElBRW5CQyxLQUFEO0FBQUE7O0FBQUEsU0FDSCxlQUFJRCxVQUFVLENBQUNFLElBQVgsQ0FBZ0JELEtBQWhCLENBQUosRUFBNEIsaUJBQUFBLEtBQUssQ0FBQ0UsTUFBTixpRkFBY0MsVUFBZCx3RUFBMEJDLEtBQTFCLEdBQWtDTCxVQUFVLENBQUNNLEtBQVgsQ0FBaUJMLEtBQWpCLENBQWxDLEdBQTRELGNBQUcsQ0FBSCxDQUF4RixFQUErRk0sSUFBL0YsQ0FDRSxvQkFBSSxDQUFDLENBQUNDLElBQUQsRUFBT0gsS0FBUCxDQUFELE1BQW9CO0FBQ3RCRyxJQUFBQSxJQURzQjtBQUV0QkosSUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLE1BQUFBLEtBRFU7QUFFVkksTUFBQUEsV0FBVyxFQUFFUixLQUFLLENBQUNRLFdBRlQ7QUFHVkMsTUFBQUEsU0FBUyxFQUFFVCxLQUFLLENBQUNTO0FBSFA7QUFGVSxHQUFwQixDQUFKLENBREYsQ0FERztBQUFBLENBRkw7O0FBY08sTUFBTUMsZUFVNkIsR0FBRyxDQUFDO0FBQUNWLEVBQUFBLEtBQUQ7QUFBUUQsRUFBQUEsVUFBUjtBQUFvQlksRUFBQUEsV0FBcEI7QUFBaUNDLEVBQUFBO0FBQWpDLENBQUQsS0FDM0MsY0FBR1osS0FBSCxFQUFVTSxJQUFWLENBQ0Usb0JBQUlPLDRCQUFKLENBREYsRUFFRSwwQkFBVSw2QkFBZUYsV0FBZixDQUFWLENBRkYsRUFHRSwwQkFBV0csQ0FBRCxJQUFRRixrQkFBa0IsR0FBR0Esa0JBQWtCLENBQUNFLENBQUQsQ0FBbEIsQ0FBc0JSLElBQXRCLENBQTJCLG9CQUFJLE1BQU1RLENBQVYsQ0FBM0IsQ0FBSCxHQUE4QyxjQUFHQSxDQUFILENBQWxGLENBSEYsRUFJRSwwQkFBVWhCLGdCQUFnQixDQUFDQyxVQUFELENBQTFCLENBSkYsQ0FYSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB0eXBlIHtFbnRpdHksIE9mZnNldFF1ZXJ5LCBPZmZzZXRRdWVyeVJlc3VsdCwgUmVhZFJlcG9zaXRvcnl9IGZyb20gJ0BsaWIvaW50ZXJmYWNlcyc7XG5pbXBvcnQgdHlwZSB7U2NoZW1hT2Z9IGZyb20gJ3l1cCc7XG5cbmltcG9ydCB7b2YsIHppcH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgc3dpdGNoTWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge3Nhbml0aXplT2Zmc2V0UXVlcnksIHZhbGlkYXRlU2NoZW1hfSBmcm9tICdAbGliL2hlbHBlcnMnO1xuXG5jb25zdCBmaW5kSW5SZXBvc2l0b3J5ID0gPElkID0gc3RyaW5nLCBFIGV4dGVuZHMgRW50aXR5PElkPiA9IEVudGl0eTxJZD4sIFEgZXh0ZW5kcyBPZmZzZXRRdWVyeSA9IE9mZnNldFF1ZXJ5PihcbiAgcmVwb3NpdG9yeTogUmVhZFJlcG9zaXRvcnk8SWQsIEU+LFxuKSA9PiAocXVlcnk6IFEpOiBPYnNlcnZhYmxlPE9mZnNldFF1ZXJ5UmVzdWx0PElkLCBFPj4gPT5cbiAgemlwKHJlcG9zaXRvcnkuZmluZChxdWVyeSksIHF1ZXJ5LmZpZWxkcz8ucGFnaW5hdGlvbj8udG90YWwgPyByZXBvc2l0b3J5LmNvdW50KHF1ZXJ5KSA6IG9mKDApKS5waXBlKFxuICAgIG1hcCgoW2RhdGEsIHRvdGFsXSkgPT4gKHtcbiAgICAgIGRhdGEsXG4gICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgIHRvdGFsLFxuICAgICAgICByb3dzUGVyUGFnZTogcXVlcnkucm93c1BlclBhZ2UsXG4gICAgICAgIHBhZ2VJbmRleDogcXVlcnkucGFnZUluZGV4LFxuICAgICAgfSxcbiAgICB9KSksXG4gICk7XG5cbmV4cG9ydCBjb25zdCBmaW5kT2Zmc2V0UXVlcnk6IDxcbiAgSWQgPSBzdHJpbmcsXG4gIEUgZXh0ZW5kcyBFbnRpdHk8SWQ+ID0gRW50aXR5PElkPixcbiAgUSBleHRlbmRzIE9mZnNldFF1ZXJ5ID0gT2Zmc2V0UXVlcnlcbj4ocGFyYW1zOiB7XG4gIHF1ZXJ5OiBRO1xuICBkZWZhdWx0UXVlcnk/OiBQYXJ0aWFsPFE+O1xuICByZXBvc2l0b3J5OiBSZWFkUmVwb3NpdG9yeTxJZCwgRT47XG4gIHF1ZXJ5U2NoZW1hOiBTY2hlbWFPZjx1bmtub3duPjtcbiAgdmFsaWRhdGVQZXJtaXNzaW9uPzogKHF1ZXJ5OiBRKSA9PiBPYnNlcnZhYmxlPHZvaWQ+O1xufSkgPT4gT2JzZXJ2YWJsZTxPZmZzZXRRdWVyeVJlc3VsdDxJZCwgRT4+ID0gKHtxdWVyeSwgcmVwb3NpdG9yeSwgcXVlcnlTY2hlbWEsIHZhbGlkYXRlUGVybWlzc2lvbn0pID0+XG4gIG9mKHF1ZXJ5KS5waXBlKFxuICAgIG1hcChzYW5pdGl6ZU9mZnNldFF1ZXJ5KSxcbiAgICBzd2l0Y2hNYXAodmFsaWRhdGVTY2hlbWEocXVlcnlTY2hlbWEpKSxcbiAgICBzd2l0Y2hNYXAoKHEpID0+ICh2YWxpZGF0ZVBlcm1pc3Npb24gPyB2YWxpZGF0ZVBlcm1pc3Npb24ocSkucGlwZShtYXAoKCkgPT4gcSkpIDogb2YocSkpKSxcbiAgICBzd2l0Y2hNYXAoZmluZEluUmVwb3NpdG9yeShyZXBvc2l0b3J5KSksXG4gICk7XG4iXX0=