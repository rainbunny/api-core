"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findOffsetQuery = void 0;

var _helpers = require("../helpers");

const findInRepository = repository => query => {
  var _query$fields, _query$fields$paginat;

  return Promise.all([repository.find(query), (_query$fields = query.fields) !== null && _query$fields !== void 0 && (_query$fields$paginat = _query$fields.pagination) !== null && _query$fields$paginat !== void 0 && _query$fields$paginat.total ? repository.count(query) : Promise.resolve(0)]).then(([data, total]) => ({
    data,
    pagination: {
      total,
      rowsPerPage: query.rowsPerPage,
      pageIndex: query.pageIndex
    }
  }));
};

const findOffsetQuery = ({
  query,
  repository,
  querySchema,
  validatePermissions
}) => Promise.resolve(query).then(_helpers.sanitizeOffsetQuery).then((0, _helpers.validateSchema)(querySchema)).then(q => validatePermissions ? validatePermissions(q).then(() => q) : Promise.resolve(q)).then(findInRepository(repository));

exports.findOffsetQuery = findOffsetQuery;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXJ2aWNlcy9maW5kLW9mZnNldC1xdWVyeS50cyJdLCJuYW1lcyI6WyJmaW5kSW5SZXBvc2l0b3J5IiwicmVwb3NpdG9yeSIsInF1ZXJ5IiwiUHJvbWlzZSIsImFsbCIsImZpbmQiLCJmaWVsZHMiLCJwYWdpbmF0aW9uIiwidG90YWwiLCJjb3VudCIsInJlc29sdmUiLCJ0aGVuIiwiZGF0YSIsInJvd3NQZXJQYWdlIiwicGFnZUluZGV4IiwiZmluZE9mZnNldFF1ZXJ5IiwicXVlcnlTY2hlbWEiLCJ2YWxpZGF0ZVBlcm1pc3Npb25zIiwic2FuaXRpemVPZmZzZXRRdWVyeSIsInEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFFQSxNQUFNQSxnQkFBZ0IsR0FFbEJDLFVBREYsSUFHQ0MsS0FBRDtBQUFBOztBQUFBLFNBQ0VDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLENBQ1ZILFVBQVUsQ0FBQ0ksSUFBWCxDQUFnQkgsS0FBaEIsQ0FEVSxFQUVWLGlCQUFBQSxLQUFLLENBQUNJLE1BQU4saUZBQWNDLFVBQWQsd0VBQTBCQyxLQUExQixHQUFrQ1AsVUFBVSxDQUFDUSxLQUFYLENBQWlCUCxLQUFqQixDQUFsQyxHQUE0REMsT0FBTyxDQUFDTyxPQUFSLENBQWdCLENBQWhCLENBRmxELENBQVosRUFHR0MsSUFISCxDQUdRLENBQUMsQ0FBQ0MsSUFBRCxFQUFPSixLQUFQLENBQUQsTUFBb0I7QUFDMUJJLElBQUFBLElBRDBCO0FBRTFCTCxJQUFBQSxVQUFVLEVBQUU7QUFDVkMsTUFBQUEsS0FEVTtBQUVWSyxNQUFBQSxXQUFXLEVBQUVYLEtBQUssQ0FBQ1csV0FGVDtBQUdWQyxNQUFBQSxTQUFTLEVBQUVaLEtBQUssQ0FBQ1k7QUFIUDtBQUZjLEdBQXBCLENBSFIsQ0FERjtBQUFBLENBSkY7O0FBaUJPLE1BQU1DLGVBVTBCLEdBQUcsQ0FBQztBQUFDYixFQUFBQSxLQUFEO0FBQVFELEVBQUFBLFVBQVI7QUFBb0JlLEVBQUFBLFdBQXBCO0FBQWlDQyxFQUFBQTtBQUFqQyxDQUFELEtBQ3hDZCxPQUFPLENBQUNPLE9BQVIsQ0FBZ0JSLEtBQWhCLEVBQ0dTLElBREgsQ0FDUU8sNEJBRFIsRUFFR1AsSUFGSCxDQUVRLDZCQUFlSyxXQUFmLENBRlIsRUFHR0wsSUFISCxDQUdTUSxDQUFELElBQVFGLG1CQUFtQixHQUFHQSxtQkFBbUIsQ0FBQ0UsQ0FBRCxDQUFuQixDQUF1QlIsSUFBdkIsQ0FBNEIsTUFBTVEsQ0FBbEMsQ0FBSCxHQUEwQ2hCLE9BQU8sQ0FBQ08sT0FBUixDQUFnQlMsQ0FBaEIsQ0FIN0UsRUFJR1IsSUFKSCxDQUlRWCxnQkFBZ0IsQ0FBQ0MsVUFBRCxDQUp4QixDQVhLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUge1NjaGVtYU9mfSBmcm9tICd5dXAnO1xuaW1wb3J0IHR5cGUge0VudGl0eSwgT2Zmc2V0UXVlcnksIE9mZnNldFF1ZXJ5UmVzdWx0LCBSZWFkUmVwb3NpdG9yeX0gZnJvbSAnLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQge3Nhbml0aXplT2Zmc2V0UXVlcnksIHZhbGlkYXRlU2NoZW1hfSBmcm9tICcuLi9oZWxwZXJzJztcblxuY29uc3QgZmluZEluUmVwb3NpdG9yeSA9XG4gIDxJZCA9IHN0cmluZywgRSBleHRlbmRzIEVudGl0eTxJZD4gPSBFbnRpdHk8SWQ+LCBRIGV4dGVuZHMgT2Zmc2V0UXVlcnkgPSBPZmZzZXRRdWVyeT4oXG4gICAgcmVwb3NpdG9yeTogUmVhZFJlcG9zaXRvcnk8SWQsIEU+LFxuICApID0+XG4gIChxdWVyeTogUSk6IFByb21pc2U8T2Zmc2V0UXVlcnlSZXN1bHQ8SWQsIEU+PiA9PlxuICAgIFByb21pc2UuYWxsKFtcbiAgICAgIHJlcG9zaXRvcnkuZmluZChxdWVyeSksXG4gICAgICBxdWVyeS5maWVsZHM/LnBhZ2luYXRpb24/LnRvdGFsID8gcmVwb3NpdG9yeS5jb3VudChxdWVyeSkgOiBQcm9taXNlLnJlc29sdmUoMCksXG4gICAgXSkudGhlbigoW2RhdGEsIHRvdGFsXSkgPT4gKHtcbiAgICAgIGRhdGEsXG4gICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgIHRvdGFsLFxuICAgICAgICByb3dzUGVyUGFnZTogcXVlcnkucm93c1BlclBhZ2UsXG4gICAgICAgIHBhZ2VJbmRleDogcXVlcnkucGFnZUluZGV4LFxuICAgICAgfSxcbiAgICB9KSk7XG5cbmV4cG9ydCBjb25zdCBmaW5kT2Zmc2V0UXVlcnk6IDxcbiAgSWQgPSBzdHJpbmcsXG4gIEUgZXh0ZW5kcyBFbnRpdHk8SWQ+ID0gRW50aXR5PElkPixcbiAgUSBleHRlbmRzIE9mZnNldFF1ZXJ5ID0gT2Zmc2V0UXVlcnksXG4+KHBhcmFtczoge1xuICBxdWVyeTogUTtcbiAgZGVmYXVsdFF1ZXJ5PzogUGFydGlhbDxRPjtcbiAgcmVwb3NpdG9yeTogUmVhZFJlcG9zaXRvcnk8SWQsIEU+O1xuICBxdWVyeVNjaGVtYTogU2NoZW1hT2Y8dW5rbm93bj47XG4gIHZhbGlkYXRlUGVybWlzc2lvbnM/OiAocXVlcnk6IFEpID0+IFByb21pc2U8dm9pZD47XG59KSA9PiBQcm9taXNlPE9mZnNldFF1ZXJ5UmVzdWx0PElkLCBFPj4gPSAoe3F1ZXJ5LCByZXBvc2l0b3J5LCBxdWVyeVNjaGVtYSwgdmFsaWRhdGVQZXJtaXNzaW9uc30pID0+XG4gIFByb21pc2UucmVzb2x2ZShxdWVyeSlcbiAgICAudGhlbihzYW5pdGl6ZU9mZnNldFF1ZXJ5KVxuICAgIC50aGVuKHZhbGlkYXRlU2NoZW1hKHF1ZXJ5U2NoZW1hKSlcbiAgICAudGhlbigocSkgPT4gKHZhbGlkYXRlUGVybWlzc2lvbnMgPyB2YWxpZGF0ZVBlcm1pc3Npb25zKHEpLnRoZW4oKCkgPT4gcSkgOiBQcm9taXNlLnJlc29sdmUocSkpKVxuICAgIC50aGVuKGZpbmRJblJlcG9zaXRvcnkocmVwb3NpdG9yeSkpO1xuIl19